#include <iostream> 

// MorePointers
int main() {
	setlocale(LC_ALL, "Russian");
	int n, m;
	// Напрелнение указателя на нетральный адрес
	/*
	// 1 способ
	int* pointer;
		pointer = 0; //нетральный адрес
			if (pointer != 0)
		std::cout << pointer << std::endl;
	else
		std::cout << "Указатель не инициализирован. \n";
			//	*pointer = 15; - ОШИБКА т.к в нетральной памяти нельзя записывать данные
	// 2-ой способ
	pointer = NULL; // нетральный адрес 
	if (pointer != NULL)
		std::cout << pointer << std::endl;
	else
		std::cout << "Указатель не инициализирован. \n";
	// 3-ий способ (ПРАВИЛЬНЫЙ)
	pointer = nullptr;
	if (pointer != nullptr)
		std::cout << pointer << std::endl;
	else
		std::cout << "Указатель не инициализирован. \n";
		*/
		// Модификации указателей 
	n = 15;
	
		// указатель на константу/ Может быть перенаправлен на другие области памяти. 
	//С его помощью НЕВОЗМОЖНО поменять значение переменной на которую он направлен.
	//
	const int *pn1;
	pn1 = &n;
   	// *pn1 = 1;  // ОШИБКА!
 	n = 1;
	std::cout << *pn1 << std::endl;
	
		// константный указатель или указатель-константа
	// не может перенаправлен в другую область памяти 
	// инцилизирован сразу в момент создания. с помощью 
	// МОЖНО менять значение переменной, на которую он направлен.

	int* const pn2 = &n;
	//pn2 = &m; // ОШИБКА!
	*pn2 = 20;
	std::cout << n << std::endl;

	//3-ий вид
	//константный указатель на константу
	// не может быть перенаправлен
	// на другуцю область памяти и должен быть инцилизирован сразу
	// в момент создания. С его помощью НЕВОЗМОЖНО поменять значение
	// переменной на которую он направлен
	const int* const pn3 = &n;
	//pn3 = &n; //ошибка
	//*pn3 = 30; //ошибка
	std::cout << *pn3 << std::endl;
	




	return 0;


}








